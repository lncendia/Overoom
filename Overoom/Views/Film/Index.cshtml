@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Overoom.Domain.Films.Enums
@using Overoom.WEB.Contracts.Film
@model Overoom.WEB.Models.Film.FilmPageViewModel
@{
    ViewData["Title"] = Model.Film.Name;
    var auth = await Context.AuthenticateAsync(IdentityConstants.ApplicationScheme);
}

<div class="row gx-5 gy-3">
<div class="col-md-4 order-md-last">
    <div class="block-background" style="height: 100%">
        Я что-то сюда впихну
    </div>
</div>
<div class="col-md-8 order-md-first">
<div class="block-background mb-4">
    <div class="row">
        <div class="col-xl-3 col-lg-4 text-center mb-3">
            <img class="poster" src="~/@Model.Film.PosterUri" alt="">
        </div>
        <div class="col-xl-9 col-lg-8">
            <div class="mb-3">
                <div class="d-flex justify-content-between">
                    <h3>@Model.Film.Name</h3>
                    @if (!auth.None)
                    {
                        <form asp-action="Watchlist" method="post" id="watchlist">
                            <input type="hidden" name="filmId" value="@Model.Film.Id">
                            <a href="#" class="watchlist-button" in-watchlist="@Model.Film.InWatchlist!.Value.ToString()">
                                @if (Model.Film.InWatchlist.Value)
                                {
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock-fill" viewBox="0 0 16 16">
                                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
                                    </svg>
                                }
                                else
                                {
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock" viewBox="0 0 16 16">
                                        <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
                                        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
                                    </svg>
                                }
                            </a>
                        </form>
                    }
                </div>
            </div>
            <div class="mb-2">
                <span class="film-key">Тип:</span>
                @{
                        var type = Model.Film.Type switch{
                            FilmType.Serial => "Сериал,",
                            FilmType.Film => "Фильм",
                            _ => throw new ArgumentOutOfRangeException()};
                    var data = new Dictionary<string, string> { { "type", Model.Film.Type.ToString() } };
                    <a class="films-search" asp-controller="Films" asp-action="FilmSearch" asp-all-route-data="data">@type</a>
                }
                @if (Model.Film.Type == FilmType.Serial)
                {
                    <span>@Model.Film.CountSeasons сезон(ов), @Model.Film.CountEpisodes эпизод(ов)</span>
                }
            </div>
            <div class="mb-2">
                <span class="film-key">Страна:</span>
                @{
                    var count = Model.Film.Countries.Count - 1;
                    for (var index = 0; index < Model.Film.Countries.Count; index++)
                    {
                        var el = Model.Film.Countries.ElementAt(index);
                        var coma = index != count;
                        var route = new Dictionary<string, string> { { "country", el } };
                        <a class="films-search" asp-controller="Films" asp-action="FilmSearch" asp-all-route-data="route">@el</a>if (coma) {<span>, </span>}
                    }
                }
            </div>
            <div class="mb-2">
                <span class="film-key">Жанр:</span>
                @{
                    count = Model.Film.Genres.Count - 1;
                    for (var index = 0; index < Model.Film.Genres.Count; index++)
                    {
                        var el = Model.Film.Genres.ElementAt(index);
                        var coma = index != count;
                        var route = new Dictionary<string, string> { { "genre", el } };
                        <a class="films-search" asp-controller="Films" asp-action="FilmSearch" asp-all-route-data="route">@el</a>if (coma) {<span>, </span>}
                    }
                }
            </div>
            <div class="mb-2">
                <span class="film-key">Режиссер:</span>
                @{
                    count = Model.Film.Directors.Count - 1;
                    for (var index = 0; index < Model.Film.Directors.Count; index++)
                    {
                        var el = Model.Film.Directors.ElementAt(index);
                        var coma = index != count;
                        var route = new Dictionary<string, string> { { "person", el } };
                        <a class="films-search" asp-controller="Films" asp-action="FilmSearch" asp-all-route-data="route">@el</a>if (coma) {<span>, </span>}
                    }
                }
            </div>
            <div class="mb-2">
                <span class="film-key">Сценарий:</span>
                @{
                    count = Model.Film.ScreenWriters.Count - 1;
                    for (var index = 0; index < Model.Film.ScreenWriters.Count; index++)
                    {
                        var el = Model.Film.ScreenWriters.ElementAt(index);
                        var coma = index != count;
                        var route = new Dictionary<string, string> { { "person", el } };
                        <a class="films-search" asp-controller="Films" asp-action="FilmSearch" asp-all-route-data="route">@el</a>if (coma) {<span>, </span>}
                    }
                }
            </div>
            <div class="mb-2">
                <span class="film-key">Актеры:</span>
                @{
                    count = Model.Film.Actors.Count - 1;
                    for (var index = 0; index < Model.Film.Actors.Count; index++)
                    {
                        var el = Model.Film.Actors.ElementAt(index);
                        var coma = index != count;
                        var route = new Dictionary<string, string> { { "person", el.name } };
                        <a class="films-search" asp-controller="Films" asp-action="FilmSearch" asp-all-route-data="route" title="@el.desc">@el.name</a>if (coma) {<span>, </span>}
                    }
                }
            </div>
            <div>
                <span class="film-key">Оценка:</span>
                <span class="content-description">
                    @Model.Film.Rating
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
                        <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z"/>
                    </svg>
                </span>
            </div>
            <div class="d-flex flex-wrap align-items-center">
                <span class="film-key me-2">Рейтинг пользователей:</span>
                <div class="d-flex flex-wrap align-items-center">
                    @if (!auth.None)
                    {
                        var rating = Math.Round(Model.Film.UserRating);
                        var userScore = Model.Film.UserScore ?? 0;
                        var score = userScore == 0 ? rating : userScore;
                        await Html.RenderPartialAsync("AddRating", new AddRatingParameters { FilmId = Model.Film.Id, Score = score });
                    }
                    <div class="text-center ms-2">
                        <span class="rating">@Model.Film.UserRating.ToString("F2")</span>
                        <span class="rating-count">@Model.Film.UserRatingsCount оценок</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="block-background mb-4">
    <span class="film-key">Описание:</span>
    <span class="content-description">@Model.Film.Description</span>
</div>
<div class="block-background mb-4 d-none" id="watchBlock"></div>
<div class="block-background mb-4">
    <div class="table-responsive">
        <table class="table cdn-table">
            <thead>
            <tr>
                <td>№</td>
                <th scope="col">Качество</th>
                <th scope="col">Озвучки</th>
                <th scope="col">Действия</th>
            </tr>
            </thead>
            <tbody class="table-group-divider">
            @for (var i = 0; i < Model.Film.CdnList.Count; i++)
            {
                <tr>
                    <th style="width: 10%" scope="row">@(i + 1)</th>
                    <td style="width: 25%">@Model.Film.CdnList.ElementAt(i).Quality</td>
                    <td style="width: 40%">@Model.Film.CdnList.ElementAt(i).Voices</td>
                    <td style="width: 25%">
                        @{
                            var route = new Dictionary<string, string> { { "Id", Model.Film.Id.ToString() }, { "CdnType", Model.Film.CdnList.ElementAt(i).Cdn.ToString() } };
                        }
                        <a class="btn btn-outline-danger d-block watch" asp-action="GetFilmUri" asp-all-route-data="route">Смотреть</a>
                        <a class="btn btn-outline-danger d-block mt-1" asp-action="Create" asp-controller="FilmRoom" asp-all-route-data="route">Создать комнату</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>
<div class="block-background mb-4" style="min-height: 300px">
    <h3>Комментарии</h3>
    <form asp-action="Comments" id="com">
        <input type="hidden" name="id" value="@Model.Film.Id">
    </form>
    <div class="my-4">
        @if (!auth.None)
        {
            @await Html.PartialAsync("AddComment", new AddCommentParameters { FilmId = Model.Film.Id })
        }
        else
        {
            <a asp-controller="Account" asp-action="Login">Войти</a>
            <span>чтобы оставить комментарий</span>
        }
    </div>

    <form asp-controller="Film" asp-action="DeleteComment" id="deleteComment">
        <div class="comments"></div>
    </form>
    <div class="spinner">
        <div class="spinner-grow text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="spinner-grow text-secondary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="spinner-grow text-success" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="spinner-grow text-danger" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="spinner-grow text-warning" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="spinner-grow text-info" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="spinner-grow text-light" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="spinner-grow text-dark" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
</div>
</div>
</div>

@section scripts {
    <script src="~/lib/infinite-ajax-scroll/dist/infinite-ajax-scroll.min.js"></script>
    <script src="~/js/scroller.js"></script>
    <script src="~/js/film.js"></script>
    <script src="~/js/rating.js"></script>
    @if (Model.Film.UserScore.HasValue)
    {
        <script>
            $('.rating-area').addClass('rating-area-selected')
        </script>
    }
}

@section styles {
    <link rel="stylesheet" href="~/css/film.css"/>
}